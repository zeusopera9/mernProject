{"ast":null,"code":"/**\r\n * Helper function for iterating over a collection\r\n *\r\n * @param collection\r\n * @param fn\r\n */\nfunction each(collection, fn) {\n  var i = 0,\n    length = collection.length,\n    cont;\n  for (i; i < length; i++) {\n    cont = fn(collection[i], i);\n    if (cont === false) {\n      break; //allow early exit\n    }\n  }\n}\n\n/**\r\n * Helper function for determining whether target object is an array\r\n *\r\n * @param target the object under test\r\n * @return {Boolean} true if array, false otherwise\r\n */\nfunction isArray(target) {\n  return Object.prototype.toString.apply(target) === '[object Array]';\n}\n\n/**\r\n * Helper function for determining whether target object is a function\r\n *\r\n * @param target the object under test\r\n * @return {Boolean} true if function, false otherwise\r\n */\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\nmodule.exports = {\n  isFunction: isFunction,\n  isArray: isArray,\n  each: each\n};","map":{"version":3,"names":["each","collection","fn","i","length","cont","isArray","target","Object","prototype","toString","apply","isFunction","module","exports"],"sources":["C:/Users/lenovo/Desktop/KJ Somaiya/TY/MERN/mernProject/frontend/node_modules/enquire.js/src/Util.js"],"sourcesContent":["/**\r\n * Helper function for iterating over a collection\r\n *\r\n * @param collection\r\n * @param fn\r\n */\r\nfunction each(collection, fn) {\r\n    var i      = 0,\r\n        length = collection.length,\r\n        cont;\r\n\r\n    for(i; i < length; i++) {\r\n        cont = fn(collection[i], i);\r\n        if(cont === false) {\r\n            break; //allow early exit\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function for determining whether target object is an array\r\n *\r\n * @param target the object under test\r\n * @return {Boolean} true if array, false otherwise\r\n */\r\nfunction isArray(target) {\r\n    return Object.prototype.toString.apply(target) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Helper function for determining whether target object is a function\r\n *\r\n * @param target the object under test\r\n * @return {Boolean} true if function, false otherwise\r\n */\r\nfunction isFunction(target) {\r\n    return typeof target === 'function';\r\n}\r\n\r\nmodule.exports = {\r\n    isFunction : isFunction,\r\n    isArray : isArray,\r\n    each : each\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,CAACC,UAAU,EAAEC,EAAE,EAAE;EAC1B,IAAIC,CAAC,GAAQ,CAAC;IACVC,MAAM,GAAGH,UAAU,CAACG,MAAM;IAC1BC,IAAI;EAER,KAAIF,CAAC,EAAEA,CAAC,GAAGC,MAAM,EAAED,CAAC,EAAE,EAAE;IACpBE,IAAI,GAAGH,EAAE,CAACD,UAAU,CAACE,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC3B,IAAGE,IAAI,KAAK,KAAK,EAAE;MACf,MAAM,CAAC;IACX;EACJ;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAO,CAACC,MAAM,EAAE;EACrB,OAAOC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,KAAK,CAACJ,MAAM,CAAC,KAAK,gBAAgB;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,UAAU,CAACL,MAAM,EAAE;EACxB,OAAO,OAAOA,MAAM,KAAK,UAAU;AACvC;AAEAM,MAAM,CAACC,OAAO,GAAG;EACbF,UAAU,EAAGA,UAAU;EACvBN,OAAO,EAAGA,OAAO;EACjBN,IAAI,EAAGA;AACX,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}