{"ast":null,"code":"/**\r\n * Delegate to handle a media query being matched and unmatched.\r\n *\r\n * @param {object} options\r\n * @param {function} options.match callback for when the media query is matched\r\n * @param {function} [options.unmatch] callback for when the media query is unmatched\r\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\r\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\r\n * @constructor\r\n */\nfunction QueryHandler(options) {\n  this.options = options;\n  !options.deferSetup && this.setup();\n}\nQueryHandler.prototype = {\n  constructor: QueryHandler,\n  /**\r\n   * coordinates setup of the handler\r\n   *\r\n   * @function\r\n   */\n  setup: function () {\n    if (this.options.setup) {\n      this.options.setup();\n    }\n    this.initialised = true;\n  },\n  /**\r\n   * coordinates setup and triggering of the handler\r\n   *\r\n   * @function\r\n   */\n  on: function () {\n    !this.initialised && this.setup();\n    this.options.match && this.options.match();\n  },\n  /**\r\n   * coordinates the unmatch event for the handler\r\n   *\r\n   * @function\r\n   */\n  off: function () {\n    this.options.unmatch && this.options.unmatch();\n  },\n  /**\r\n   * called when a handler is to be destroyed.\r\n   * delegates to the destroy or unmatch callbacks, depending on availability.\r\n   *\r\n   * @function\r\n   */\n  destroy: function () {\n    this.options.destroy ? this.options.destroy() : this.off();\n  },\n  /**\r\n   * determines equality by reference.\r\n   * if object is supplied compare options, if function, compare match callback\r\n   *\r\n   * @function\r\n   * @param {object || function} [target] the target for comparison\r\n   */\n  equals: function (target) {\n    return this.options === target || this.options.match === target;\n  }\n};\nmodule.exports = QueryHandler;","map":{"version":3,"names":["QueryHandler","options","deferSetup","setup","prototype","constructor","initialised","on","match","off","unmatch","destroy","equals","target","module","exports"],"sources":["C:/Users/lenovo/Desktop/KJ Somaiya/TY/MERN/mernProject/frontend/node_modules/enquire.js/src/QueryHandler.js"],"sourcesContent":["/**\r\n * Delegate to handle a media query being matched and unmatched.\r\n *\r\n * @param {object} options\r\n * @param {function} options.match callback for when the media query is matched\r\n * @param {function} [options.unmatch] callback for when the media query is unmatched\r\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\r\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\r\n * @constructor\r\n */\r\nfunction QueryHandler(options) {\r\n    this.options = options;\r\n    !options.deferSetup && this.setup();\r\n}\r\n\r\nQueryHandler.prototype = {\r\n\r\n    constructor : QueryHandler,\r\n\r\n    /**\r\n     * coordinates setup of the handler\r\n     *\r\n     * @function\r\n     */\r\n    setup : function() {\r\n        if(this.options.setup) {\r\n            this.options.setup();\r\n        }\r\n        this.initialised = true;\r\n    },\r\n\r\n    /**\r\n     * coordinates setup and triggering of the handler\r\n     *\r\n     * @function\r\n     */\r\n    on : function() {\r\n        !this.initialised && this.setup();\r\n        this.options.match && this.options.match();\r\n    },\r\n\r\n    /**\r\n     * coordinates the unmatch event for the handler\r\n     *\r\n     * @function\r\n     */\r\n    off : function() {\r\n        this.options.unmatch && this.options.unmatch();\r\n    },\r\n\r\n    /**\r\n     * called when a handler is to be destroyed.\r\n     * delegates to the destroy or unmatch callbacks, depending on availability.\r\n     *\r\n     * @function\r\n     */\r\n    destroy : function() {\r\n        this.options.destroy ? this.options.destroy() : this.off();\r\n    },\r\n\r\n    /**\r\n     * determines equality by reference.\r\n     * if object is supplied compare options, if function, compare match callback\r\n     *\r\n     * @function\r\n     * @param {object || function} [target] the target for comparison\r\n     */\r\n    equals : function(target) {\r\n        return this.options === target || this.options.match === target;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = QueryHandler;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,CAACC,OAAO,EAAE;EAC3B,IAAI,CAACA,OAAO,GAAGA,OAAO;EACtB,CAACA,OAAO,CAACC,UAAU,IAAI,IAAI,CAACC,KAAK,EAAE;AACvC;AAEAH,YAAY,CAACI,SAAS,GAAG;EAErBC,WAAW,EAAGL,YAAY;EAE1B;AACJ;AACA;AACA;AACA;EACIG,KAAK,EAAG,YAAW;IACf,IAAG,IAAI,CAACF,OAAO,CAACE,KAAK,EAAE;MACnB,IAAI,CAACF,OAAO,CAACE,KAAK,EAAE;IACxB;IACA,IAAI,CAACG,WAAW,GAAG,IAAI;EAC3B,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIC,EAAE,EAAG,YAAW;IACZ,CAAC,IAAI,CAACD,WAAW,IAAI,IAAI,CAACH,KAAK,EAAE;IACjC,IAAI,CAACF,OAAO,CAACO,KAAK,IAAI,IAAI,CAACP,OAAO,CAACO,KAAK,EAAE;EAC9C,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIC,GAAG,EAAG,YAAW;IACb,IAAI,CAACR,OAAO,CAACS,OAAO,IAAI,IAAI,CAACT,OAAO,CAACS,OAAO,EAAE;EAClD,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIC,OAAO,EAAG,YAAW;IACjB,IAAI,CAACV,OAAO,CAACU,OAAO,GAAG,IAAI,CAACV,OAAO,CAACU,OAAO,EAAE,GAAG,IAAI,CAACF,GAAG,EAAE;EAC9D,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIG,MAAM,EAAG,UAASC,MAAM,EAAE;IACtB,OAAO,IAAI,CAACZ,OAAO,KAAKY,MAAM,IAAI,IAAI,CAACZ,OAAO,CAACO,KAAK,KAAKK,MAAM;EACnE;AAEJ,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGf,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}